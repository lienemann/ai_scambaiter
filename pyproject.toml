[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ai-scambaiter"
dynamic = ["version"]
description = 'Talk to scammers with a bot!'
readme = "README.md"
requires-python = ">=3.10"
license = "Apache-2.0"
keywords = []
authors = [
    { name = "Jan Lienemann", email = "ai_scambaiter@jan-lienemann.de" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
    "telethon>=1.32.1",
    "dependency-injector>=4.41.0",
    "tiktoken>=0.5.1",
    "openai>=1.3.5",
]

[project.urls]
Documentation = "https://github.com/lienemann/ai_scambaiter"
Issues = "https://github.com/lienemann/ai_scambaiter/issues"
Source = "https://github.com/lienemann/ai_scambaiter"


[tool.hatch.version]
path = "ai_scambaiter/__init__.py"

[[tool.hatch.envs.all.matrix]]
python = ["3.10", "3.11", "3.12"]

[tool.hatch.envs.default]
dependencies = []


[tool.hatch.envs.test]
dependencies = ["pytest>=7.4.0", "coverage[toml]>=6.5"]

[tool.hatch.envs.test.scripts]
test = "pytest {args:-s tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = ["- coverage combine", "coverage report"]
cov = ["test-cov", "cov-report"]

[tool.hatch.envs.lint]
dependencies = [
    "black>=23.3.0",
    "mypy>=1.4.1",
    "ruff>=0.0.275",
    "isort>=5.12.0",
]
detached = true

[tool.hatch.envs.lint.scripts]
typing = "mypy --install-types --non-interactive {args:ai_scambaiter tests}"
style = ["black {args:.}", "ruff {args:.}"]
fmt = ["isort {args:.}", "style"]
all = ["style", "typing"]

[tool.black]
line-length = 88
target-version = ["py310"]
include = "\\.pyi?$"

[tool.isort]
profile = "black"
src_paths = ["ai_scambaiter", "tests"]

[tool.ruff]
select = [
    # pyflakes
    "F",
    # pycodestyle
    "E",
    "W",
    # flake8-2020
    "YTT",
    # flake8-quotes
    "Q",
    "B019",
]

ignore = [
    "E501",
    "F405",
    "E741",
    "E722",
    "E402",
    # Do not assign a lambda expression, use a def
    "E731",
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = [
    "A",
    "B",
    "C",
    "D",
    "E",
    "F",
    "G",
    "I",
    "N",
    "Q",
    "S",
    "T",
    "W",
    "ANN",
    "ARG",
    "BLE",
    "COM",
    "DJ",
    "DTZ",
    "EM",
    "ERA",
    "EXE",
    "FBT",
    "ICN",
    "INP",
    "ISC",
    "NPY",
    "PD",
    "PGH",
    "PIE",
    "PL",
    "PT",
    "PTH",
    "PYI",
    "RET",
    "RSE",
    "RUF",
    "SIM",
    "SLF",
    "TCH",
    "TID",
    "TRY",
    "UP",
    "YTT",
]
unfixable = []

exclude = [
    ".eggs",
    ".git",
    ".ruff_cache",
    ".tox",
    ".venv",
    "_build",
    "build",
    "dist",
    "venv",
]

line-length = 88
target-version = "py310"

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.per-file-ignores]
# F401: Imported but unused
"__init__.py" = ["F401"]

[tool.coverage.run]
source_pkgs = ["ai_scambaiter", "tests"]
branch = true
parallel = true
# omit = ["ai_scambaiter/__about__.py"]

[tool.coverage.paths]
ai_scambaiter = ["ai_scambaiter"]
tests = ["tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]
